<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://mb-izzo.github.io/</id>
  <title><![CDATA[Izzo]]></title>
  <subtitle><![CDATA[A blog for my thoughts]]></subtitle>
  <icon>https://mb-izzo.github.io/favicon.png</icon>
  <link href="https://mb-izzo.github.io" />
  <link href="https://mb-izzo.github.io/atom.xml" rel="self" type="application/atom+xml" />
  <updated>2024-01-04T19:58:47.951Z</updated>
  <author>
    <name><![CDATA[Izzo]]></name>
  </author>
  <category term="Gamedev" scheme="https://mb-izzo.github.io/?tags=Gamedev" />
  <category term="Misc" scheme="https://mb-izzo.github.io/?tags=Misc" />
  <category term="Tutorial" scheme="https://mb-izzo.github.io/?tags=Tutorial" />
  <entry>
    <title type="html"><![CDATA[Choosing a game engine]]></title>
    <link href="https://mb-izzo.github.io/choosing-a-game-engine" />
    <id>https://mb-izzo.github.io/choosing-a-game-engine</id>
    <published>2024-01-04T00:00:00.000Z</published>
    <updated>2024-01-04T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>The past few months have been a ride for gamedev. Unity announcing crazy stuff about fees, Godot becoming more known to the world, Unreal 5 looking amazing… <strong>Leaving aton of hobbyist wondering what is the best choice, if a “best” engine even exists.</strong></p><p>Will it be a good choice for long term? Short term? Can I trust the people behind it? Will Ilike the workflow? Will it be able to handle my game? Is there enough plugins available? That’s a lot of questions and they seem legit, it means you care about your tools which is great.</p><p><strong>Let me share my thoughts about choosing a game engine!</strong></p><h2 id="dont-get-attached-to-software"><a href="#dont-get-attached-to-software">Don’t get attached to software</a></h2><p><strong>Software is forever changing</strong>. It comes and go. Sometimes companies do stupidthings and disappear as fast as they appeared. It can be scary to choose a game engine because of this. However, I have good news for you. <strong>Your skills as a programmer and gamedev are in your control</strong>, not in the control of crazy executives. Hone yourskills, work on your fundamentals. It will not solve every problems but it will help you through the tough times.</p><p>I see too many young gamedevs focusing too much on third party assets. I know, assets are cool and can save a lot of time, but relying on them can hold you back sometimes. <strong>I’m not advocating on reinventing the wheel, but there’s a balance to find.</strong> Using assets is a risk, making your own is a risk too, but it will bring a vast amount of knowledge to you, thus making you a far more confident developer. The day you will need to jump out of a sinking ship and switch engine, it will only be a matter of time to make your tool work with a new engine: <strong>you’re not relying on some random person on the internet to create the assets for you.</strong></p><h2 id="try-different-engines-and-workflows"><a href="#try-different-engines-and-workflows">Try different engines and workflows</a></h2><p>At the end of the day, <strong>everything comes down to your personal taste.</strong> Some will tell you they love working with Unity, some prefer Unreal, and some are crazy enough to build their own engine. <strong>None of these choices are stupid.</strong> Some people prefer the code driven style of using a framework like FNA (the new XNA) or cocos2d. Some peoplelike to be able to use blueprints with unreal (even though they come with their own limitations). Some people like Unity because it’s so versatile. </p><p><strong>Every engine has its strengths and weaknesses, do some extensive research</strong>, and try different things. After all, you can try almost every engine for free. Use it for a game jam or a little pet project!</p><h2 id="choosing-the-right-tool-for-the-right-job"><a href="#choosing-the-right-tool-for-the-right-job">Choosing the right tool for the right job</a></h2><p><strong>Many things will drive your engine choice</strong>: personal taste, the kind of game you’re making,the skills in your team, among other things.</p><p>You’re making a 2d platformer and your main programmer has some experience with game maker?Then go for it, if it matches your project. <strong>Don’t get stuck with “the big names”,</strong>at the end of the day, many successful games made with unity could have been made with game maker,<strong>it’s about your skills as a game developer, not the engine.</strong> Using the right enginefor you will make your life easier, sure, but that’s about <em>it</em> (even if “it” can actually be “a lot”).</p><p>Also, <strong>there’s a good chance any engine is “powerful” enough to make the game you want</strong>(or are able to do). The day you will be able to make a game so special that engineoptimization is an issue, you will know the right answers to the question “can Xengine handle my game?”</p><p><strong>Choose the right tool for you, even if it’s not “hype”.</strong></p><h2 id="stick-to-it-no-matter-what"><a href="#stick-to-it-no-matter-what">Stick to it no matter what</a></h2><p><strong>The golden rule: never upgrade your engine version during development.</strong>That’s also why you should choose your engine carefully, and maybe sometimes youwill want to use an earlier but more stable version of an engine.</p><p>However, I think <strong>it’s ok to change engine between projects.</strong> You are not marriedto your engine, it’s <em>just</em> a tool. If you have a clearproduction pipeline and good programming/gamedev fundamentals, <strong>you will be ableto adapt to a new engine that may be a better fit for your game</strong>. Or you mighthave no choice because a company decides to price their engine way too expensiveat some point in time. </p><p>If you’re at ease with engines in general, making the jumpto another engine will make you sad but after some time you will be proficient too,and faster than with the precedent engine.</p><h2 id="conclusion"><a href="#conclusion">Conclusion</a></h2><p>I’ve had these thoughts in my head since the Unity drama, so I had to write them down,and I hope my view on game development will help you. </p><p><strong>TLDR</strong>: Game engines are tools. Treat them as such. Focus on your skills.</p>]]>
    </content>
    <category term="Gamedev" scheme="https://mb-izzo.github.io/?tags=Gamedev" />
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2023 retrospective]]></title>
    <link href="https://mb-izzo.github.io/my-2023-retrospective" />
    <id>https://mb-izzo.github.io/my-2023-retrospective</id>
    <published>2024-01-03T00:00:00.000Z</published>
    <updated>2024-01-03T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p><strong>2023 is over. Welcome 2024.</strong> It’s that time of the year again, and I encourageyou to write down what you did this year. It always makes me feel better.Now get ready for some good old bragging (again)!</p><h2 id="shipped-an-aaa-game"><a href="#shipped-an-aaa-game">Shipped an AAA game</a></h2><p>It’s been almost 3 years at my job, and in September, <strong>the game I’ve worked onfinally shipped!</strong> It’s a cool achievement, and <strong>the release week felt very special</strong>,it’s a dream coming true. I cannot wait to see how we’re going to make the gamebetter over time, and now the challenge of “live maintenance” starts. It’s a newway to work, so it’s always a good thing for my experience.</p><h2 id="learned-a-bit-of-game-engine-development"><a href="#learned-a-bit-of-game-engine-development">Learned (a bit of) game engine development</a></h2><p>I’ve always wanted to make my own game engine, but never thought I was skilled enough.After two tries this year, I made something I’m <em>kind of</em> happy about. I learned tomake a <strong>simple 2D renderer with OpenGL</strong>, and plenty of C++ stuff. I’ve started to godown the rabbit hole of <strong>Graphics Programming</strong>, but stopped too early because of a lackof math skills. I really <strong>need to get better at math this year</strong>, to do a third tryon making my own game engine.</p><h2 id="started-learning-rust"><a href="#started-learning-rust">Started learning Rust</a></h2><p>It’s the new cool kid in town, so I had to learn it a bit. I created a very simpleroguelike with the help of a library made for that purpose. Then I tried to tinkerwith <strong>macroquad</strong> to make very simple games. It helped me learn a bit about Rust andbecome more familiar with the Rust ecosystem.</p><p>I also made a simple <strong>static site generator</strong> with it, which was a cool projectoverall that I recommend to anyone curious about it!</p><h2 id="did-more-web-dev"><a href="#did-more-web-dev">Did more web dev</a></h2><p>Last year, I got more familiar with web development. This year, it all clicked.I did more front-end and back-end dev at work, which improved my skills a ton. I’mnow very comfortable coding a simple backend, whatever the language is. Which ledme to learn a bit about…</p><h3 id="golang"><a href="#golang">…Golang</a></h3><p>Golang is fun! I did a simple REST API with it, and it helped me learn more aboutthe language. But the funniest project I did with it was a simple <strong>todos manager, howoriginal</strong>.</p><p>I made it for work and linked it to our Jira, because I think the <strong>jira web interfaceis too slow for me</strong>, and I hate going to the Jira website just to know what I need to do,it disrupts my workflow too much. <strong>So I made this todo tool to handle all this in my terminal</strong>,<strong>which made my life a tiny bit better at work</strong>.</p><h2 id="did-one-gamejam-with-a-friend"><a href="#did-one-gamejam-with-a-friend">Did one gamejam with a friend</a></h2><p>I’ve played a lot of Persona 5 this year and it really reignited my love for games (andfor gamedev). So I did a gamejam with a friend and ultimately, we ended up making a verypoor version of Persona 5 turn by turn fights. It was fun because I hadn’t touched Unitysince a very long time, so it was an opportunity for me to get back at it!</p><h2 id="godot"><a href="#godot">Godot</a></h2><p>I started learning Godot, <strong>even before the Unity fees drama</strong>, just because I hate howslow Unity became. Godot is lightweight and fast. <strong>It lacks some important stuff in my opinion</strong>,and have some really rough edges here and there. I like it, but <strong>I can’t imagine myself usingit for a very serious project now</strong>, but I will definitely keep an eye on it from now on and<strong>I might use for smaller projects</strong>.</p><h2 id="wrap-up"><a href="#wrap-up">Wrap-up</a></h2><p>I am very happy about my progress this year, and I feel I am finally on my way to becominga better programmer. Experience really makes the difference, and <strong>having good mentors too.</strong><strong>With the right people around us, we go faster, further, and we have fun with it!</strong></p><p>Which leads me to think that I better start posting more here, and start sharing mythoughts and knowledge more regularly!</p><p>Stay tuned!</p>]]>
    </content>
    <category term="Misc" scheme="https://mb-izzo.github.io/?tags=Misc" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Fixing astro.build/Vite hot reload crash ENOENT file not found]]></title>
    <link href="https://mb-izzo.github.io/nvim-vite-hot-reload" />
    <id>https://mb-izzo.github.io/nvim-vite-hot-reload</id>
    <published>2023-04-09T00:00:00.000Z</published>
    <updated>2023-04-09T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>If you ever get an error about a ‘4913’ file not existing, making the devserver crash when developing with Astro or Vite in general, I have good newsfor you: I found out why and here is the fix.</p><h2 id="vim-creates-a-temporary-4913-file"><a href="#vim-creates-a-temporary-4913-file">Vim creates a temporary 4913 file.</a></h2><p>It has its reason. If you want to know why: <a href="https://github.com/neovim/neovim/issues/3460" rel="nofollow noopener noreferrer external" target="_blank">github link</a>.</p><h2 id="the-fix"><a href="#the-fix">The fix</a></h2><p>Ignore the file in Vite hot reload.</p><!-- HTML_TAG_START --><pre class="shiki material-default" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'>vite: &#123;</div><div class='line'>  server: &#123;</div><div class='line'>    watch: &#123;</div><div class='line'>      ignored: "**/4913";</div><div class='line'>    &#125;</div><div class='line'>  &#125;</div><div class='line'>&#125;</div></code></div></pre><!-- HTML_TAG_END -->]]>
    </content>
    <category term="Tutorial" scheme="https://mb-izzo.github.io/?tags=Tutorial" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Setting up Godot with Neovim on Windows]]></title>
    <link href="https://mb-izzo.github.io/nvim-godot-solution" />
    <id>https://mb-izzo.github.io/nvim-godot-solution</id>
    <published>2023-01-02T00:00:00.000Z</published>
    <updated>2023-01-02T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>Setting up neovim with <strong>Godot</strong> is not that hard. Probably very easy on linux,but there are a few things to know to make it work on windows. Actually,there’s <em>only</em> one thing to know but it was hard to find.</p><h2 id="my-current-lsp-setup-with-lsp-zero"><a href="#my-current-lsp-setup-with-lsp-zero">My current LSP Setup with LSP Zero</a></h2><p>I have no idea how it would work with another setup than mine so let me tell youabout how my LSP is set up. I use<a href="https://github.com/VonHeikemen/lsp-zero.nvim" rel="nofollow noopener noreferrer external" target="_blank">lsp-zero</a>, and if you don’t useit yet, <em>you should</em>. It makes setting up LSP a breeze and still configurable.</p><h2 id="configure-godot-external-editor"><a href="#configure-godot-external-editor">Configure Godot external editor</a></h2><ol><li>In godot, go to <code>Editor &gt; Editor Settings &gt; Text Editor &gt; External </code></li><li>In Exac path, set your path to <code>nvim.exe</code> (probably in Program Files)</li><li>In exec flags, put <code>--server 127.0.0.1:55432 --remote-send &quot;&lt;C-\&gt;&lt;C-N&gt;:n {file}&lt;CR&gt;:call cursor({line},{col})&lt;CR&gt;&quot;</code></li></ol><p><strong>You can customize the remote command sent to nvim</strong>, to target a line and column.Like a did here with <em>call cursor</em>.The docs for the remote feature of neovim are available<a href="https://neovim.io/doc/user/remote.html" rel="nofollow noopener noreferrer external" target="_blank">here</a>.</p><p>This should be it for godot.</p><h2 id="important-override-lsp-settings-for-gdscript-to-use-netcat"><a href="#important-override-lsp-settings-for-gdscript-to-use-netcat">IMPORTANT: Override LSP settings for gdscript to use netcat</a></h2><p>For Linux, connecting to the lsp work with sockets, but <strong>it does not workon windows</strong>.</p><p><strong>You need to override the cmd setting to use netcat instead</strong> (<a href="https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/server_configurations/gdscript.lua" rel="nofollow noopener noreferrer external" target="_blank">which is also the cmdfor 0.8 nvim according to the source file</a>).</p><ul><li>Download <strong>netcat</strong> <a href="https://nmap.org/ncat/" rel="nofollow noopener noreferrer external" target="_blank">from their website</a></li><li>Add <code>ncat.exe</code> to your Path (<code>C:\Program Files (x86)\Nmap</code> by default)</li><li>Add the following to wherever you set up your lsp in your nvim config:</li></ul><!-- HTML_TAG_START --><pre class="shiki material-default" lua="true"><div class="language-id">lua</div><div class='code-container'><code><div class='line'>-- file: lsp.lua</div><div class='line'>-- lsp is require('lsp-zero')</div><div class='line'>-- put this before calling lsp.setup()</div><div class='line'>lsp.configure('gdscript', &#123;</div><div class='line'>    force_setup = true, -- because the LSP is global. Read more on lsp-zero docs about this.</div><div class='line'>    single_file_support = false,</div><div class='line'>    cmd = &#123;'ncat', '127.0.0.1', '6008'&#125;, -- the important trick for Windows!</div><div class='line'>    root_dir = require('lspconfig.util').root_pattern('project.godot', '.git'),</div><div class='line'>    filetypes = &#123;'gd', 'gdscript', 'gdscript3' &#125;</div><div class='line'>&#125;)</div></code></div></pre><!-- HTML_TAG_END --><h2 id="launch-nvim-with-listen"><a href="#launch-nvim-with-listen">Launch nvim with –listen</a></h2><p>Nvim comes with a remote feature. Before, you had to use something called (nvr)but it is not needed anymore.</p><ul><li>Navigate to your godot project folder</li><li>Run nvim from your terminal or whatever GUI you prefer with<code>nvim --listen 127.0.0.1:55432 .</code></li></ul><p>Then, when you click on a script in Godot, it should open it in your nvim buffer.</p><p>Enjoy making games with Neovim and Godot!</p>]]>
    </content>
    <category term="Tutorial" scheme="https://mb-izzo.github.io/?tags=Tutorial" />
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2022 retrospective]]></title>
    <link href="https://mb-izzo.github.io/my-2022-retrospective" />
    <id>https://mb-izzo.github.io/my-2022-retrospective</id>
    <published>2022-12-31T00:00:00.000Z</published>
    <updated>2022-12-31T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p><strong>2022 is over. Welcome 2023.</strong> I thought this year was empty for me, but whenwriting down a list of what I’ve done this year, I realized I learned many things.I’m not going to talk about personal stuff, but I’ll write about<strong>what I learned on computers.</strong></p><p>Now get ready to some good old bragging!</p><h2 id="became-better-at-my-job"><a href="#became-better-at-my-job">Became better at my job</a></h2><p>May 2022 marked my first year at my job. After one year, I felt that I startedto understand the complexity of working on AAA games. Today, I feel that I canbe the <strong>owner of features</strong>, with my <strong>amazing lead</strong> always looking to help me ifneeded.</p><p>I also realized that <strong>people here seems to trust me</strong>. They come to me to askfor help, sometimes on a subject I’m not closely related to.</p><p><strong>How?</strong> I don’t know. I think I’m just <strong>curious enough</strong> and loving my work enough soI naturally want to do my best and help people around me. I’m nothing of agenius and I’m far from being the best programmer in the company, very far. Butstill, just doing my best seems enough. <strong>No need to be a genius</strong>. What a relief.</p><h2 id="learned-web-development"><a href="#learned-web-development">Learned web development</a></h2><h3 id="front-end"><a href="#front-end">Front-end</a></h3><p>Front-end, I learned at work with a project I completed from A to Z with <strong>React</strong>.I’m very thankful for my lead, because he let me start this project and trustedme 100%. I had no prior experience with front-end dev, and still <strong>he trusted thatI could achieve this project</strong>. It’s a dashboard app that is now useful to a dozenof people everyday at my job.</p><p>I realized I was coming to a place where <strong>I can learn a tech and deliver somethingwith it, by myself</strong>. What a relief.</p><h3 id="back-end"><a href="#back-end">Back-end</a></h3><p>This was a personal challenge. For no specific reasons, I wanted to be able to<strong>develop a simple back-end</strong>. I just want to be able to code a web app by myself, ifone day I have an idea that needs it.</p><p>I have nothing to show yet, but <strong>I’m confident enough that I can build a simplefull-stack app</strong>, and I’ll talk about my first project on this blog soon.</p><p><strong>Disclaimer</strong>: of course, I have no idea how to make things scalable and stuff likethat, I’m just saying I would be able to develop small personal projects, notprofessional web apps.</p><h2 id="figma-and-uiux-design"><a href="#figma-and-uiux-design">Figma and UI/UX Design</a></h2><p><strong>I always wanted to be able to do anything</strong>, at least just a bit. UI and UX Designare difficult subjects for me, mostly because <strong>I don’t think I’m an artist at all</strong>.So I learned the basics, just to make stuff that looks at least <em>correct</em>.</p><p>The book <a href="https://www.refactoringui.com/" rel="nofollow noopener noreferrer external" target="_blank">Refactoring UI</a> helped me a lot. It’sspecifically made for programmers that are not UI/UX designers. A book Irecommend, <strong>because the greatest software is useless without proper UX</strong>.</p><h2 id="switched-to-dvorak-layout-and-bought-a-split-keyboard"><a href="#switched-to-dvorak-layout-and-bought-a-split-keyboard">Switched to Dvorak layout and bought a split keyboard.</a></h2><p>First, let me tell you that a <strong>split keyboard is life-changing</strong>. It’s pricey, butI don’t regret this one.</p><p>It forced me to learn touch typing, all that while learning <em>Dvorak</em> layout.I’m not faster than before, but I feel way more comfortable typing now. <strong>I feelit’s easier on my hands and arms</strong>. My body is thankful.</p><h2 id="bought-a-vertical-mouse"><a href="#bought-a-vertical-mouse">Bought a vertical mouse.</a></h2><p>Just do it. <strong>Do it for your wrists</strong>. Trust me on this one. And keep that expensivegaming mouse for when you want to play games.</p><h2 id="neovim-and-linux-workflow"><a href="#neovim-and-linux-workflow">Neovim and Linux workflow</a></h2><p>Neovim also changed my developer experience. It took a couple of months to getused to but it was worth it. Combined with a split keyboard, my programmingworkflow is just so smooth.</p><p>Combine neovim with linux, i3wm, tmux… <strong>and you never want to go back again</strong>.</p><p>I’ll write a post with more details about my workflow.</p><h2 id="wrap-up"><a href="#wrap-up">Wrap-up</a></h2><p>Overall, this year was all about having a better developer experience and learningabout webdev.</p><p><strong>I became a better programmer, and hope to become better this year too!</strong></p>]]>
    </content>
    <category term="Misc" scheme="https://mb-izzo.github.io/?tags=Misc" />
  </entry>
  <entry>
    <title type="html"><![CDATA[About me]]></title>
    <link href="https://mb-izzo.github.io/about" />
    <id>https://mb-izzo.github.io/about</id>
    <published>2022-12-30T00:00:00.000Z</published>
    <updated>2022-12-30T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>Hi, I’m I2zo, welcome on my blog. I am a young programmer,currently working at Ubisoft.My job title is <strong>QA Engineer</strong>.<br>The responsabilities for this kind of rolemay vary from a company to another, but to be brief, I <strong>mostly develop tools</strong>to help testing with automation. I work along DevOps and gameplay programmers.I mostly use C++ and C# at my job.</p><p>Before that, I founded a company with some friends,<a href="https://talesup.io/?lang=en" rel="nofollow noopener noreferrer external" target="_blank">Tales Up</a>, a narrative multiplayer mobile game.I developed the game with <strong>React Native</strong>, and made some importants programmingdecisions that were probably very bad as I had no experience and I am a<strong>self taught</strong> programmer.</p><h2 id="skills"><a href="#skills">Skills</a></h2><p>I like to tinker with all kind of technologies and experiment. I have the mostexperience with C#, but you will find below all the tech I tinker(ed) with.<br>I received a <strong>game design degree</strong>, but I <strong>taught myself programming</strong> since almost10 years.</p><h2 id="tech-and-languages-i-work-with"><a href="#tech-and-languages-i-work-with">Tech and languages I work with</a></h2><ul><li>C#</li><li>C++</li><li>Rust</li><li>React / React Native</li><li>Python</li><li>Lua</li><li>TypeScript</li><li>Neovim</li></ul>]]>
    </content>
    <category term="Misc" scheme="https://mb-izzo.github.io/?tags=Misc" />
  </entry>
</feed>